services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: adminPassword
      POSTGRES_DB: financial_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/run/postgresql/data

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2201

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2201
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - postgres
      - redis

  transaction-service:
    build: ./transaction-service
    depends_on:
      - postgres
    ports:
      - "3001:3001"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: testuser
      DB_PASSWORD: adminPassword
      DB_NAME: financial_system
      DB_SYNCHRONIZE: "true"

  anti-fraud-service:
    build: ./anti-fraud-service
    depends_on:
      kafka: 
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:29092

  status-update-service:
    build: ./status-update-service
    depends_on:
      - kafka
      - postgres
      - redis

volumes:
  postgres_data: