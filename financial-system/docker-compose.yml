services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: adminPassword
      POSTGRES_DB: financial_system
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/run/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest.arm64
    environment:
      ZOOKEEPER_CLIENT_PORT: 2201
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2201", "|", "grep", "imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-enterprise-kafka:latest.arm64
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2201
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE: "your-license-key" # Optional for enterprise features
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      kafka: 
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      TRANSACTION_SERVICE_URL: http://transaction-service:3001
      ANTI_FRAUD_SERVICE_URL: http://anti-fraud-service:3002
      STATUS_UPDATE_SERVICE_URL: http://status-update-service:3003
    networks:
      - app-network

  transaction-service:
    build: ./transaction-service
    links:
      - redis
    depends_on:
      kafka: 
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - "3001:3001"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: testuser
      DB_PASSWORD: adminPassword
      DB_NAME: financial_system
      DB_SYNCHRONIZE: "true"
      KAFKA_BROKER: kafka:29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - app-network

  anti-fraud-service:
    build: ./anti-fraud-service
    depends_on:
      kafka: 
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:29092
    networks:
      - app-network

  status-update-service:
    build: ./status-update-service
    depends_on:
      kafka: 
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: testuser
      DB_PASSWORD: adminPassword
      DB_NAME: financial_system
      KAFKA_BROKER: kafka:29092
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data: